function I = CSRule(f,a,b,m)
% CMRule   Composite Simpson's Rule
%   I = CSRule(f, a, b, m) approximates the integral of f(x) between
%   a and b using the Composite Simpson's Rule with m strips.
%     f is a function handle
%     a and b are scalars
%     m is an integer greater or equal than 1

% Possible input argument checks
% check if m is greater or equal than 1
% check if  m is an integer greater or equal than 1
if mod(m,1) > 0
    error('m need an integer')
elseif m <1
    error('m need greater or equal than 1')
end

% check if a and b are scalars
if b < a
    error('a and b not scalars or b  is less than a')
elseif size(a) ~= 1
    error('a not scalars')
elseif  size(b) ~=1
    error('b not scalars')
end

% Define width h
h = (b-a)/(2*m);

% Define column vector with the mid-points of each strip
x_vec = zeros(2*m+1,1);
for i = 1:2*m+1
    x_vec(i) = a+(i-1)*h;
end

% Define the terms to be multiplied by 4
p = 0;
for i = 1:m
    p = p + f(x_vec(2*i));
end

% Define the terms to be multiplied by 2
q = 0;
for i = 1:m+1
    q = q + f(x_vec(2*i -1));
end

% Apply the Composite Simpson's Rule
I = h/3*(4*p+2*q-f(a)-f(b));

end
